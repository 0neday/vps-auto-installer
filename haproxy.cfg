#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    ulimit-n	65535
    maxconn     65535 
    user        haproxy
    group       haproxy
    daemon

    nbproc 8 
    cpu-map auto:1-8   0-7

    nbthread 4 
    cpu-map auto:1/1-4 8-11 

    stats bind-process 1


    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    tcp 
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
#    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         5s
    timeout client          5s 
    timeout server          5s 
    timeout http-keep-alive 10s
    timeout check           10s

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------

listen status
	bind *:8888
	mode  http
	stats refresh 30s
	stats uri /
	stats realm Haproxy
	stats auth admin:passwd


frontend  shadowsocks_in
	mode tcp
	bind *:443
	log global
	option tcplog

	#	tcp-request inspect-delay 5s
	#	tcp-request content accept if HTTP
	#	acl is_trojan req.payload(0,3) -m bin 160301
	#	use_backend trojan-out if is_trojan 
	default_backend shadowsocks-out

frontend  trojan-in
	mode tcp
	bind *:2020
	log global
	option tcplog
	use_backend trojan-out


backend  shadowsocks-out 
	mode tcp
	default-server inter 6s fall 3 rise 2 
	option  tcp-check
	server trojan-forward-ss 127.0.0.1:8080  check weight 1

backend  trojan-out
	mode tcp
	default-server inter 6s fall 3 rise 2
	option  tcp-check
	server vultr-trojan-us xx.xx.xx.xx:443 check weight 1
